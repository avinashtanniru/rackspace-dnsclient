/*
Cloud DNS

This is the Rackspace Cloud DNS v2 contract.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dnsclient

import (
	"encoding/json"
)

// checks if the JobResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobResponse{}

// JobResponse struct for JobResponse
type JobResponse struct {
	ZoneId *string `json:"zoneId,omitempty"`
	Fqdn *string `json:"fqdn,omitempty"`
}

// NewJobResponse instantiates a new JobResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobResponse() *JobResponse {
	this := JobResponse{}
	return &this
}

// NewJobResponseWithDefaults instantiates a new JobResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobResponseWithDefaults() *JobResponse {
	this := JobResponse{}
	return &this
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise.
func (o *JobResponse) GetZoneId() string {
	if o == nil || IsNil(o.ZoneId) {
		var ret string
		return ret
	}
	return *o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobResponse) GetZoneIdOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneId) {
		return nil, false
	}
	return o.ZoneId, true
}

// HasZoneId returns a boolean if a field has been set.
func (o *JobResponse) HasZoneId() bool {
	if o != nil && !IsNil(o.ZoneId) {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given string and assigns it to the ZoneId field.
func (o *JobResponse) SetZoneId(v string) {
	o.ZoneId = &v
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise.
func (o *JobResponse) GetFqdn() string {
	if o == nil || IsNil(o.Fqdn) {
		var ret string
		return ret
	}
	return *o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobResponse) GetFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.Fqdn) {
		return nil, false
	}
	return o.Fqdn, true
}

// HasFqdn returns a boolean if a field has been set.
func (o *JobResponse) HasFqdn() bool {
	if o != nil && !IsNil(o.Fqdn) {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given string and assigns it to the Fqdn field.
func (o *JobResponse) SetFqdn(v string) {
	o.Fqdn = &v
}

func (o JobResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ZoneId) {
		toSerialize["zoneId"] = o.ZoneId
	}
	if !IsNil(o.Fqdn) {
		toSerialize["fqdn"] = o.Fqdn
	}
	return toSerialize, nil
}

type NullableJobResponse struct {
	value *JobResponse
	isSet bool
}

func (v NullableJobResponse) Get() *JobResponse {
	return v.value
}

func (v *NullableJobResponse) Set(val *JobResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableJobResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableJobResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobResponse(val *JobResponse) *NullableJobResponse {
	return &NullableJobResponse{value: val, isSet: true}
}

func (v NullableJobResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Cloud DNS

This is the Rackspace Cloud DNS v2 contract.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dnsclient

import (
	"encoding/json"
)

// checks if the RecordSelfLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecordSelfLink{}

// RecordSelfLink struct for RecordSelfLink
type RecordSelfLink struct {
	Rel *string `json:"rel,omitempty"`
	Href *string `json:"href,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewRecordSelfLink instantiates a new RecordSelfLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecordSelfLink() *RecordSelfLink {
	this := RecordSelfLink{}
	return &this
}

// NewRecordSelfLinkWithDefaults instantiates a new RecordSelfLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecordSelfLinkWithDefaults() *RecordSelfLink {
	this := RecordSelfLink{}
	return &this
}

// GetRel returns the Rel field value if set, zero value otherwise.
func (o *RecordSelfLink) GetRel() string {
	if o == nil || IsNil(o.Rel) {
		var ret string
		return ret
	}
	return *o.Rel
}

// GetRelOk returns a tuple with the Rel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordSelfLink) GetRelOk() (*string, bool) {
	if o == nil || IsNil(o.Rel) {
		return nil, false
	}
	return o.Rel, true
}

// HasRel returns a boolean if a field has been set.
func (o *RecordSelfLink) HasRel() bool {
	if o != nil && !IsNil(o.Rel) {
		return true
	}

	return false
}

// SetRel gets a reference to the given string and assigns it to the Rel field.
func (o *RecordSelfLink) SetRel(v string) {
	o.Rel = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *RecordSelfLink) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordSelfLink) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *RecordSelfLink) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *RecordSelfLink) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RecordSelfLink) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordSelfLink) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RecordSelfLink) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RecordSelfLink) SetId(v string) {
	o.Id = &v
}

func (o RecordSelfLink) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecordSelfLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rel) {
		toSerialize["rel"] = o.Rel
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableRecordSelfLink struct {
	value *RecordSelfLink
	isSet bool
}

func (v NullableRecordSelfLink) Get() *RecordSelfLink {
	return v.value
}

func (v *NullableRecordSelfLink) Set(val *RecordSelfLink) {
	v.value = val
	v.isSet = true
}

func (v NullableRecordSelfLink) IsSet() bool {
	return v.isSet
}

func (v *NullableRecordSelfLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecordSelfLink(val *RecordSelfLink) *NullableRecordSelfLink {
	return &NullableRecordSelfLink{value: val, isSet: true}
}

func (v NullableRecordSelfLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecordSelfLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


